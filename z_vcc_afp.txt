z_vcc_afp02:--z_vcc_afp02
	declare @t_bdate nvarchar(10)
	declare @t_edate nvarchar(10)
	declare @t_bcustno nvarchar(20)
	declare @t_ecustno nvarchar(20)
	declare @t_bproductno nvarchar(20)
	declare @t_eproductno nvarchar(20)
	declare @t_local nvarchar(20)
	
	set @t_bdate = case when '#non' = [5] then '' else [5] end
	set @t_edate = case when '#non' = [6] then CHAR(255) else [6] end
	set @t_bcustno = case when '#non' = [7] then '' else [7] end
	set @t_ecustno = case when '#non' = [8] then CHAR(255) else [8] end
	set @t_bproductno = case when '#non' = [9] then '' else [9] end
	set @t_eproductno = case when '#non' = [10] then CHAR(255) else [10] end
	set @t_local = case when '#non' = [11] then '' else [11] end
	---------------------------------------------------------------------------------------------------
	declare @tmp table(
		pno1 int,
		pno2 int,
		locala nvarchar(20),
		custno nvarchar(20),
		nick nvarchar(20),
		productno nvarchar(20),
		product nvarchar(50),
		mount float
	)
	
	insert into @tmp(locala,custno,productno,mount)
	select c.caseuseno,b.custno,a.productno,sum(a.mount)
	from view_vccs a
	left join view_vcc b on a.noa=b.noa
	left join addr c on b.post2=c.noa
	where b.noa is not null
	and b.datea between @t_bdate and @t_edate
	and b.custno between @t_bcustno and @t_ecustno
	and (len(@t_local)=0 or @t_local=c.caseuseno)
	and a.productno between @t_bproductno and @t_eproductno
	group by c.caseuseno,b.custno,a.productno
	
	update @tmp set nick=b.nick,product=c.product
	from @tmp a
	left join cust b on a.custno=b.noa
	left join ucc c on a.productno=c.noa
	
	update @tmp set pno1=b.recno,pno2=c.recno
	from @tmp a
	left join (select ROW_NUMBER()over(PARTITION by locala order by locala,custno,productno) recno,locala,custno,productno from @tmp) b 
		on a.locala=b.locala and a.custno=b.custno and a.productno=b.productno
	left join (select ROW_NUMBER()over(PARTITION by locala,custno order by locala,custno,productno) recno,locala,custno,productno from @tmp) c 
		on a.locala=c.locala and a.custno=c.custno and a.productno=c.productno 
	
	declare @titlea nvarchar(max)
	set @titlea = case when len(@t_bdate)>0 and @t_edate!=char(255) then '日期區間： '+@t_bdate+' ~ '+@t_edate+''
						when @t_bdate=@t_edate then '日期區間： '+@t_bdate
						else '' end
	select @titlea titlea,
		locala a01,
		custno a02,
		nick a03,
		productno a04,
		product a05,
		mount a06
	,case when pno1=1 and pno2=1 then '1'  
		when pno2=1 then '2'
		else '3' end gno
	from @tmp order by locala,custno,pno1,pno2;
	
z_vcc_afp01:--z_vcc_afp01
	SET QUOTED_IDENTIFIER OFF
	declare @cmd nvarchar(max)
	declare @t_accy nvarchar(max)
	declare @t_taxtype nvarchar(max)
	declare @t_bno nvarchar(20)
	declare @t_eno nvarchar(20)
	
	set @t_accy = '[1]'
	set @t_taxtype = '[2]'
	set @t_bno = case when '#non' = [3] then '' else [3] end
	set @t_eno = case when '#non' = [4] then CHAR(255) else [4] end
	----------------------------------------------------------------------------------------------
	declare @t_pageline int = 6   --------一頁幾行
	----------------------------------------------------------------------------------------------
	declare @string nvarchar(max)
	declare @n int
	
	declare @listTaxtype table(
		noa nvarchar(20),
		namea nvarchar(max)
	)
	set @string = @t_taxtype
	while(1=1)
	begin
		set @n = PATINDEX('%,%',@string)
		if @n=0
		begin
			if LEN(@string)>0
			begin
				insert into @listTaxtype select LEFT(@string,CHARINDEX('@',@string)-1),RIGHT(@string,len(@string)-CHARINDEX('@',@string))
			end
			break
		end
		insert into @listTaxtype select LEFT(@string,CHARINDEX('@',@string)-1), SUBSTRING(LEFT(@string,@n-1),CHARINDEX('@',LEFT(@string,@n-1))+1,@n)
		set @string = SUBSTRING(@string,@n+1,LEN(@string)-@n)
	end
	----------------------------------------------------------------------------------------------
	declare @tmp table(
		gno nvarchar(10),
		noa nvarchar(20),
		custno nvarchar(20),
		cust nvarchar(max),
		tel nvarchar(max),
		addr nvarchar(max),
		post2 nvarchar(max),
		addr2 nvarchar(max),
		datea nvarchar(20),
		kind nvarchar(20),
		ckind nvarchar(max),
		paytype nvarchar(20),
		trantype nvarchar(20),
		memo nvarchar(max),
		mount float,
		[weight] float,
		[money] float,
		taxtype nvarchar(20),
		ctaxtype nvarchar(20),
		tax float,
		total float,
		invono nvarchar(max),
		tranmoney float,
		
		no2 nvarchar(10),
		productno nvarchar(20),
		product nvarchar(max),
		unit nvarchar(20),
		mounts float,
		weights float,
		price decimal(10,3),
		radius decimal(10,2),
		totals float,
		size nvarchar(max),
		memos nvarchar(max) 
	)
	set @cmd =
	" select case when row_number()over(partition by a.noa order by a.no2)=1 then '1' else '2' end"+ 
	" ,a.noa,b.custno,case when len(isnull(b.comp,''))=0 then c.comp else b.comp end"+
	" ,b.tel"+
	" ,b.addr"+
	" ,b.post2"+
	" ,b.addr2"+
	" ,b.datea,b.kind,b.paytype,b.trantype,ISNULL(b.memo,'')"+
	" ,b.taxtype,b.tax,b.money,b.total,b.invono,b.tranmoney"+
	" ,a.no2,a.productno,a.product,a.unit,a.mount,a.[weight],a.price,a.radius,a.total"+
	" ,a.memo"+
	" from view_vccs"+@t_accy+" a"+
	" left join view_vcc"+@t_accy+" b on a.noa = b.noa"+
	" left join cust c on b.custno = c.noa"+
	" where b.noa is not null "+
	" and a.noa between @t_bno and @t_eno"+
	" order by a.noa,a.no2 "
	
	insert into @tmp(gno,noa,custno,cust,tel,addr,post2,addr2,datea,kind,paytype,trantype,memo,taxtype,tax,[money],total,invono,tranmoney
		,no2,productno,product,unit,mounts,weights,price,radius,totals,memos)
	execute sp_executesql @cmd,N'@t_bno nvarchar(20),@t_eno nvarchar(20)'
	,@t_bno=@t_bno,@t_eno=@t_eno
	
	--UCCA有資料代表有使用發票系統
	--出貨單稅額改抓VCCA
	if exists(select top 1 * from ucca)
	begin
		update @tmp set tax = ISNULL(b.tax,0)
		from @tmp a
		left join vcca b on a.invono=b.noa  
		update @tmp set total = [money]+tax
	end
	
	update @tmp set ctaxtype=c.namea
	from @tmp a 
	left join @listTaxtype c on a.taxtype=c.noa
	----------------------------------------------------------------------------------------------
	declare @noa nvarchar(20)
	
	declare cursor_table cursor for
	select noa,COUNT(1) n from @tmp group by noa having (COUNT(1)%@t_pageline)!=0
	open cursor_table
	fetch next from cursor_table
	into @noa,@n
	while(@@FETCH_STATUS <> -1)
	begin		
		insert into @tmp(noa,no2,gno,memos)
		values(@noa,'yyy','3','---&nbsp'+CHAR(59)+'以下空白&nbsp'+CHAR(59)+'---')
	
		fetch next from cursor_table
		into @noa,@n
	end
	close cursor_table
	deallocate cursor_table
	
	declare cursor_table cursor for
	select noa,COUNT(1) n from @tmp group by noa 
	open cursor_table
	fetch next from cursor_table
	into @noa,@n
	while(@@FETCH_STATUS <> -1)
	begin		
		while(@n%@t_pageline!=0)
		begin
			insert into @tmp(noa,no2,gno)values(@noa,'zzz','4')
			set @n = @n + 1
		end
		fetch next from cursor_table
		into @noa,@n
	end
	close cursor_table
	deallocate cursor_table

	update @tmp set custno=b.custno,cust=b.cust,tel=b.tel,addr=b.addr,post2=b.post2,addr2=b.addr2
		,datea=b.datea,kind=b.kind,ckind=b.ckind,paytype=b.paytype,trantype=b.trantype,memo=b.memo
		,taxtype=b.taxtype,ctaxtype=b.ctaxtype,tax=b.tax,[money]=b.[money],total=b.total
		,invono=b.invono,tranmoney=b.tranmoney
	from @tmp a
	left join (select * from @tmp where gno='1') b on a.noa=b.noa 
	
	
	select a.*,cast(rrno as nvarchar)+'&nbsp'+char(59)+'/'+'&nbsp'+char(59)+cast(ttno as nvarchar) pno
	from(
		select gno,noa,no2
		,ceiling((ROW_NUMBER()over(partition by noa order by no2)-1)/@t_pageline)+1 rrno
		,b.rrno ttno
		,datea a01
		,noa a02
		,custno+'&nbsp'+char(59)+'-'+'&nbsp'+char(59)+cust a03
		,tel a04
		,ckind a06
		,trantype a07
		,ctaxtype a08
		,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tax),1)),4,12)) a09
		,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,money),1)),4,12)) a10
		,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,total),1)),4,12)) a11
		,memo a12
		,addr a13
		,post2+'&nbsp'+char(59)+'-'+'&nbsp'+char(59)+addr2 a14
		,case when isnull(tranmoney,0)!=0 then '運&nbsp'+CHAR(59)+'&nbsp'+CHAR(59)+'&nbsp'+CHAR(59)+'&nbsp'+CHAR(59)+'費：'else '' end c01
		,case when isnull(tranmoney,0)!=0 then reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,tranmoney),1)),4,12)) else '' end c02
		
		,productno b01
		,product b02
		,replace(size,'~#$',"'") b03
		,unit b04
		,mounts b05
		,weights b06
		,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,price),1)),4,12)) b07
		,reverse(substring(reverse(convert(nvarchar(15),CONVERT(money,totals),1)),4,12)) b08
		,memos b09
		,radius b10
		from @tmp a
		outer apply(select top 1 ceiling((ROW_NUMBER()over(partition by noa order by no2)-1)/@t_pageline)+1 rrno
			from @tmp where a.noa=noa order by ceiling((ROW_NUMBER()over(partition by noa order by no2)-1)/@t_pageline)+1 desc)b
	)a
	order by a.noa,a.no2;